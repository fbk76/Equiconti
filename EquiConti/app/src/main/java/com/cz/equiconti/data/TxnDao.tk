// app/src/main/java/com/cz/equiconti/data/TxnDao.java
package com.cz.equiconti.data;

import androidx.room.Dao;
import androidx.room.Delete;
import androidx.room.Insert;
import androidx.room.Query;
import androidx.room.Update;

import java.util.List;

import kotlinx.coroutines.flow.Flow;

@Dao
public interface TxnDao {

    @Insert
    long insert(Txn txn);

    @Update
    void update(Txn txn);

    @Delete
    void delete(Txn txn);

    // Lista di tutte le transazioni di un owner, ordinate per data decrescente
    @Query("SELECT * FROM Txn WHERE ownerId = :ownerId ORDER BY dateMillis DESC")
    Flow<List<Txn>> listByOwner(long ownerId);

    // Lista di tutte le transazioni di un owner in un intervallo di date
    @Query("SELECT * FROM Txn WHERE ownerId = :ownerId AND dateMillis BETWEEN :from AND :to ORDER BY dateMillis ASC")
    Flow<List<Txn>> listInRange(long ownerId, long from, long to);

    // Saldo prima di una certa data
    @Query("SELECT SUM(incomeCents - expenseCents) FROM Txn WHERE ownerId = :ownerId AND dateMillis < :before")
    Long balanceBefore(long ownerId, long before);
}
